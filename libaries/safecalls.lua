local function getsafe()
    local safe = {
        cloneref = cloneref or function(obj) return obj end,
        hookmetamethod = hookmetamethod or function(...) return function(...) end end,
        hookfunction = hookfunction or function(...) return function(...) end end,
        newcclosure = newcclosure or function(f) return f end,
        islclosure = islclosure or function(f) return type(f) == "function" end,
        iscclosure = iscclosure or function(f) return true end,
        getrawmetatable = getrawmetatable or function(obj) return getmetatable(obj) end,
        setrawmetatable = setrawmetatable or function(obj, mt) return setmetatable(obj, mt) end,
        make_writeable = make_writeable or function(mt) return mt end,
        isreadonly = isreadonly or function(tbl) return false end,
        setreadonly = setreadonly or function(tbl, bool) end,
        getcallingscript = getcallingscript or function() return nil end,
        getrenv = getrenv or function() return _ENV end,
        getgenv = getgenv or function() return _G end,
        getfenv = getfenv or function(fn) return _ENV end,
        setfenv = setfenv or function(fn, env) end,
        getthreadidentity = getthreadidentity or function() return 2 end,
        setthreadidentity = setthreadidentity or function() end,
        isexecutorclosure = isexecutorclosure or function(fn) return false end,
        checkcaller = checkcaller or function() return false end,
        isourclosure = isourclosure or function(fn) return false end,
        debug = debug or {},
        getinfo = debug.getinfo or function() return {} end,
        getupvalues = debug.getupvalues or function() return {} end,
        getupvalue = debug.getupvalue or function(fn, i) return nil end,
        setupvalue = debug.setupvalue or function(fn, i, v) end,
        getconstants = getconstants or function() return {} end,
        setconstant = setconstant or function() end,
        is_synapse_function = is_synapse_function or function() return false end,
        getprotos = getprotos or function() return {} end,
        getproto = getproto or function(fn, i) return nil end,
        getconnections = getconnections or function(signal) return {} end,
        fireclickdetector = fireclickdetector or function(cd, distance) end,
        firetouchinterest = firetouchinterest or function(part1, part2, toggle) end,
        getsignalconnections = getsignalconnections or function(sig) return {} end,
        decompile = decompile or function(func) return "-- Decompiled source not available" end,
        getnamecallmethod = getnamecallmethod or function() return "" end,
        getsenv = getsenv or function(scr) return {} end,
        getreguiddescriptor = getreguiddescriptor or function() return { GUID = 1 } end,
        isluau = isluau or function() return true end,
        rconsoleprint = rconsoleprint or function(text) print(text) end,
        rconsolewarn = rconsolewarn or function(text) warn(text) end,
        rconsoleinfo = rconsoleinfo or function(text) print(text) end,
        rconsoleerr = rconsoleerr or function(text) warn(text) end,
        rconsoleclear = rconsoleclear or function() end,
        rconsolename = rconsolename or function(name) end,
    }
    return safe
end

local function getvars()
    local cloneref = cloneref or function(obj) return obj end
    local services = {
        Players = cloneref(game:GetService("Players")),
        Lighting = cloneref(game:GetService("Lighting")),
        TweenService = cloneref(game:GetService("TweenService")),
        UserInputService = cloneref(game:GetService("UserInputService")),
        TextService = cloneref(game:GetService("TextService")),
        GuiService = cloneref(game:GetService("GuiService")),
        RunService = cloneref(game:GetService("RunService")),
        HttpService = cloneref(game:GetService("HttpService")),
        ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")),
        StarterGui = cloneref(game:GetService("StarterGui")),
        CoreGui = cloneref(game:GetService("CoreGui")),
        Workspace = cloneref(game:GetService("Workspace")),
        Debris = cloneref(game:GetService("Debris")),
        StarterPack = cloneref(game:GetService("StarterPack")),
        SoundService = cloneref(game:GetService("SoundService")),
        TeleportService = cloneref(game:GetService("TeleportService")),
        ContextActionService = cloneref(game:GetService("ContextActionService")),
        Selection = cloneref(game:GetService("Selection")),
        Chat = cloneref(game:GetService("Chat")),
        AssetService = cloneref(game:GetService("AssetService")),
        InsertService = cloneref(game:GetService("InsertService")),
        UserGameSettings = cloneref(game:GetService("UserGameSettings")),
        Teams = cloneref(game:GetService("Teams")),
        MarketplaceService = cloneref(game:GetService("MarketplaceService")),
        BadgeService = cloneref(game:GetService("BadgeService")),
        GroupService = cloneref(game:GetService("GroupService")),
        PolicyService = cloneref(game:GetService("PolicyService")),
    }

    return services
end

return getsafe(), getvars()
